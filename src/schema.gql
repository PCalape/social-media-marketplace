# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserOutput {
  id: String!
  username: String!
  firstName: String!
  lastName: String!
  email: String!
  gender: String!
  role: String!
  birthDate: DateTime!
  aboutMe: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type UserWalletBalance {
  balance: Float!
}

type StringOutput {
  message: String!
}

type AuthCredentialsOutput {
  accessToken: String!
}

type CommentOutput {
  id: String!
  comment: String!
}

type CommentPaginationOutput {
  output: [CommentOutput!]!
  total: Float!
  count: Float!
  offset: Float!
  limit: Float!
  currentPage: Float!
  totalPage: Float!
}

type NftOutput {
  id: String!
  image: String!
  title: String!
  description: String!
  category: String!
  price: Float!
  user: UserOutput!
  creator: UserOutput!
  comments: [CommentOutput!]
}

type Query {
  getUsers: [UserOutput!]!
  viewProfile: [UserOutput!]!
  getUserById(input: UUIDInput!): [UserOutput!]!
  viewBalance: [UserWalletBalance!]!
  login(input: AuthCredentialsInput!): AuthCredentialsOutput!
  getNft(input: UUIDInput!): NftOutput!
  getCommentsInNft(pagination: PaginationParams, input: UUIDInput!): CommentPaginationOutput!
}

input UUIDInput {
  uuid: String!
}

input AuthCredentialsInput {
  username: String!
  password: String!
}

input PaginationParams {
  page: Float
  limit: Float
}

type Mutation {
  updateProfile(input: UserInput!): UserOutput!
  deleteUser(input: UUIDInput!): StringOutput!
  restoreUser(input: UUIDInput!): StringOutput!
  register(input: RegisterUserInput!): UserOutput!
  createNft(input: NftInput!): NftOutput!
  deleteNft(input: UUIDInput!): StringOutput!
  createComment(input: CommentInput!): CommentOutput!
  updateComment(input: CommentUpdate!): CommentOutput!
  deleteComment(input: UUIDInput!): StringOutput!
  buyNft(input: UUIDInput!): StringOutput!
}

input UserInput {
  username: String
  firstName: String
  lastName: String
  email: String
  gender: String
  role: String
  birthDate: DateTime
  aboutMe: String
}

input RegisterUserInput {
  username: String!
  firstName: String!
  lastName: String!
  email: String!
  gender: GenderEnum!
  password: String!
  role: RoleEnum!
  birthDate: DateTime!
  aboutMe: String!
}

"""Gender"""
enum GenderEnum {
  MALE
  FEMALE
}

"""Role"""
enum RoleEnum {
  USER
  ADMIN
}

input NftInput {
  image: String!
  title: String!
  description: String!
  category: String!
  price: Float!
}

input CommentInput {
  comment: String!
  nftId: String!
}

input CommentUpdate {
  id: String!
  comment: String!
}